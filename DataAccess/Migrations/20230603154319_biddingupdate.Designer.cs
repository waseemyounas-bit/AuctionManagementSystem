// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230603154319_biddingupdate")]
    partial class biddingupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AMSModels.AddVehicle", b =>
                {
                    b.Property<Guid>("AvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdInfoRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CORType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsApproved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OORMilegeRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reserve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReserveRemaks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VDamage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VDamageRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VSeller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vaccident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaccidentRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleLocated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleOwnerShipHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiclePurchaseMoth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiclePurchaseYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vmiles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VownershipRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vtitled")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VtitledRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("btnVehicleAccident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mileageDistanceUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AvId");

                    b.ToTable("AddVehicle");
                });

            modelBuilder.Entity("AMSModels.ContactMe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactMe");
                });

            modelBuilder.Entity("AMSModels.PlaceBid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddVehicleAvId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BidAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BidTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddVehicleAvId");

                    b.HasIndex("Userid");

                    b.ToTable("PlaceBid");
                });

            modelBuilder.Entity("AMSModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IsApproved")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5fb7097c-335c-4d07-b4fd-000004e2d28c"),
                            CreatedAt = new DateTime(2023, 6, 3, 15, 43, 19, 144, DateTimeKind.Utc).AddTicks(1631),
                            Email = "admin@auctionsystem.com",
                            FullName = "SuperAdmin",
                            IsApproved = 1,
                            Password = "12345678",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("AMSModels.VehicleImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddVehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddVehicleId");

                    b.ToTable("VehicleImages");
                });

            modelBuilder.Entity("AMSModels.PlaceBid", b =>
                {
                    b.HasOne("AMSModels.AddVehicle", "AddVehicle")
                        .WithMany("Bids")
                        .HasForeignKey("AddVehicleAvId");

                    b.HasOne("AMSModels.User", "User")
                        .WithMany()
                        .HasForeignKey("Userid");

                    b.Navigation("AddVehicle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AMSModels.VehicleImages", b =>
                {
                    b.HasOne("AMSModels.AddVehicle", "AddVehicle")
                        .WithMany("VehicleImages")
                        .HasForeignKey("AddVehicleId");

                    b.Navigation("AddVehicle");
                });

            modelBuilder.Entity("AMSModels.AddVehicle", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("VehicleImages");
                });
#pragma warning restore 612, 618
        }
    }
}
